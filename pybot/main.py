import telebot
from telebot import types
import sqlite3
import webbrowser
from dotenv import load_dotenv
import os

load_dotenv()
SECRET_ID = os.getenv('TELEGRAM_BOT_ID')

bot = telebot.TeleBot(SECRET_ID)

keyboard = types.ReplyKeyboardMarkup(row_width=2)
btn1 = types.KeyboardButton('–°—Ç–∞—Ç–∏ –≤–∏–∫–æ–Ω–∞–≤—Ü–µ–ºüë©‚Äçüíª')
btn2 = types.KeyboardButton('–ù–æ–≤–∏–π –ü–æ—Å—Ç‚úÖ')
btn3 = types.KeyboardButton('–ù–æ–≤–∞ –£–≥–æ–¥–∞üìÑ')
btn4 = types.KeyboardButton('–ú–æ—ó –ø–æ—Å—Ç–∏üéí')
btn5 = types.KeyboardButton('–ú–æ—ó —á–∞—Ç–∏üí¨')
btn6 = types.KeyboardButton('–ú–æ—ó –∫–æ—à—Ç–∏üíº')
btn7 = types.KeyboardButton('–ú—ñ–π —Ä–µ–π—Ç–∏–Ω–≥üåü')
btn8 = types.KeyboardButton('–°–ø–∏—Å–æ–∫ –∫–∏–¥–∞–ªüïµ')

keyboard.add(btn1)
keyboard.add(btn2, btn3)
keyboard.add(btn4, btn5)
keyboard.add(btn6, btn7)
keyboard.add(btn8)


@bot.message_handler(commands=['start'])
def start(info):
    conn = sqlite3.connect('cuwbot.sql')
    cur = conn.cursor()

    cur.execute('CREATE TABLE IF NOT EXISTS users (id int auto_increment primary key, name varchar(50), pass varchar(50))')
    cur.execute('CREATE TABLE IF NOT EXISTS posts (id INTEGER PRIMARY KEY AUTOINCREMENT, publication_name VARCHAR(50), price DECIMAL(10,2), customer_id INTEGER, FOREIGN KEY (customer_id) REFERENCES users(id))')
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(info.chat.id, f'–ü—Ä–∏–≤—ñ—Ç, {info.from_user.first_name} {info.from_user.last_name}', reply_markup=keyboard)
    bot.register_next_step_handler(info, post_keybord_buttons)

def post_keybord_buttons(—Åallback):
    if —Åallback.text == '–°—Ç–∞—Ç–∏ –≤–∏–∫–æ–Ω–∞–≤—Ü–µ–ºüë©‚Äçüíª':
        bot.send_message(—Åallback.chat.id, '–°—Ç–∞—Ç–∏ –≤–∏–∫–æ–Ω–∞–≤—Ü–µ–º')
    elif —Åallback.text == '–ù–æ–≤–∏–π –ü–æ—Å—Ç‚úÖ':
        bot.send_message(—Åallback.chat.id, '–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø–æ—Å—Ç—É')
        bot.register_next_step_handler(—Åallback, get_data_for_post)
    elif —Åallback.text == '–ù–æ–≤–∞ –£–≥–æ–¥–∞üìÑ':
        bot.send_message(—Åallback.chat.id, '–ù–æ–≤–∞ –£–≥–æ–¥–∞üìÑ')
    elif —Åallback.text == '–ú–æ—ó –ø–æ—Å—Ç–∏üéí':
        bot.send_message(—Åallback.chat.id, '–ú–æ—ó –ø–æ—Å—Ç–∏üéí')
    elif —Åallback.text == '–ú–æ—ó —á–∞—Ç–∏üí¨':
        bot.send_message(—Åallback.chat.id, '–ú–æ—ó —á–∞—Ç–∏üí¨')
    elif —Åallback.text == '–ú–æ—ó –∫–æ—à—Ç–∏üíº':
        bot.send_message(—Åallback.chat.id, '–ú–æ—ó –∫–æ—à—Ç–∏üíº')
    elif —Åallback.text == '–ú—ñ–π —Ä–µ–π—Ç–∏–Ω–≥üåü':
        bot.send_message(—Åallback.chat.id, '–ú—ñ–π —Ä–µ–π—Ç–∏–Ω–≥üåü')
    elif —Åallback.text == '–°–ø–∏—Å–æ–∫ –ü–æ—Ä—É—à–Ω–∏–∫—ñ–≤üïµ':
        bot.send_message(—Åallback.chat.id, '–°–ø–∏—Å–æ–∫ –ü–æ—Ä—É—à–Ω–∏–∫—ñ–≤üïµ')

def get_data_for_post(message):
    post_name = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É –∑–∞ –ø–æ—Å—Ç –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å exit —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
    bot.register_next_step_handler(message, add_post_to_db, post_name)

def add_post_to_db(message, post_name):
    if message.text == 'exit':
        bot.register_next_step_handler(message, post_keybord_buttons)
    price = message.text
    if type(price) != int or float:
        bot.send_message(message.chat.id, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —Ü—ñ–Ω—É –∑–∞ –ø–æ—Å—Ç (—É —Ñ–æ—Ä–º–∞—Ç—ñ —á–∏—Å–ª–∞) –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å exit —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
        bot.register_next_step_handler(message, get_data_for_post)
    price = float(message.text)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('cuwbot.sql')
    cur = conn.cursor()
    # –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –ø–æ—Å—Ç–µ –≤ —Ç–∞–±–ª–∏—Ü—É posts
    cur.execute("INSERT INTO posts (publication_name, price, customer_id) VALUES (?, ?, ?)", (post_name, price, message.from_user.id))
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id, f'–ü–æ—Å—Ç "{post_name}" –∑ —Ü—ñ–Ω–æ—é {price} —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!')
    bot.register_next_step_handler(message, post_keybord_buttons)

@bot.message_handler(commands=['help'])
def help(info):
    bot.send_message(info.chat.id, 'Some help')


bot.polling(none_stop=True)